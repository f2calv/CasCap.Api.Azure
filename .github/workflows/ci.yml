name: ci

on:
  workflow_dispatch:
    inputs:
      configuration:
        type: choice
        description: Build Configuration
        required: true
        default: Release
        options:
          - Release
          - Debug
      push-preview:
        type: string
        description: Push preview branch?
        required: true
        default: "false"
  push:
    branches-ignore:
      - "preview/**"
    paths-ignore:
      - LICENSE
      - README.md
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    uses: f2calv/gha-workflows/.github/workflows/lint.yml@v1

  versioning:
    uses: f2calv/gha-workflows/.github/workflows/gha-release-versioning.yml@v1
    with:
      tag-prefix: ''
      tag-and-release: false

  build:
    runs-on: ubuntu-latest
    needs: [versioning]
    services:
      redis:
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000 #blob
          - 10001:10001 #queue
          - 10002:10002 #table
    steps:
      - uses: f2calv/gha-dotnet-nuget@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          configuration: ${{ inputs.configuration }}
          push-preview: ${{ inputs.push-preview }}
          version: ${{ needs.versioning.outputs.version }}
          solution-name: CasCap.Apis.Azure.Release.sln

  release:
    needs: [versioning, build]
    if: needs.versioning.outputs.release-exists == 'false'
      && (github.ref == format('refs/heads/{0}', github.event.repository.default_branch) || inputs.push-preview == 'true')
    uses: f2calv/gha-workflows/.github/workflows/gha-release-versioning.yml@v1
    permissions:
      contents: write
    with:
      semVer: ${{ needs.versioning.outputs.version }}
      tag-prefix: ''
      move-major-tag: false

  # SonarQube:
  #   runs-on: windows-latest
  #   needs: build
  #   steps:
  #     - uses: f2calv/gha-sonarqube-dotnet@v1
  #       with:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         configuration: ${{ needs.build.outputs.configuration }}
